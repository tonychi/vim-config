set nocompatible

source $VIMRUNTIME/mswin.vim
behave mswin

color desert

syntax on

set nobackup    " do not keep a backup file, use versions instead

set clipboard+=unnamed	"share system clipboard

set encoding=utf-8
set fenc=utf-8
set fileencodings=utf-8,cp936,gb2312,gbk,latin1

source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

"message encoding
language messages zh_CN.utf-8

set history=50		" keep 50 lines of command line history

set incsearch		" do incremental searching
set hlsearch		" highlight search words

set nowrap
set whichwrap+=<,>,h,l

set backspace=2
set textwidth=80

set smartindent
set smarttab
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

set wildmenu " turn on command line completion wild style
	" ignore these list file extensions
set wildignore=*.dll,*.o,*.obj,*.bak,*.exe,*.pyc,*.jpg,*.gif,*.png
set wildmode=list:longest " turn on wild mode huge list

set autoread

set selection=exclusive
set selectmode=mouse,key
set iskeyword+=_,$,@,%,# " none of these are word dividers 

set cpoptions=aABceFsmq
"             |||||||||
"             ||||||||+-- When joining lines, leave the cursor
"             |||||||      between joined lines
"             |||||||+-- When a new match is created (showmatch)
"             ||||||      pause for .5
"             ||||||+-- Set buffer options when entering the 
"             |||||      buffer
"             |||||+-- :write command updates current file name
"             ||||+-- Automatically add <CR> to the last line 
"             |||      when using :@r
"             |||+-- Searching continues at the end of the match 
"             ||      at the cursor position
"             ||+-- A backslash has no special meaning in mappings
"             |+-- :write updates alternative file name
"             +-- :read updates alternative file name

set linespace=0

set cursorline
hi cursorline guibg=#000000

if has('mouse')
	set mouse=a
    set mousehide   "hide mouse when typing
endif

set number			" always show line number
set numberwidth=5
set scrolloff=3
set ruler			" show the cursor position all the time

set showcmd			" display incomplete commands
set showmode		" always show mode
set showmatch

set laststatus=2	" always show the status line
set statusline=%F%m%r%h%w[%L][%{&ff}]%y[%p%%][%04l,%04v]
"              | | | | |  |   |      |  |     |    |
"              | | | | |  |   |      |  |     |    + current 
"              | | | | |  |   |      |  |     |       column
"              | | | | |  |   |      |  |     +-- current line
"              | | | | |  |   |      |  +-- current % into file
"              | | | | |  |   |      +-- current syntax in 
"              | | | | |  |   |          square brackets
"              | | | | |  |   +-- current fileformat
"              | | | | |  +-- number of lines
"              | | | | +-- preview flag in square brackets
"              | | | +-- help flag in square brackets
"              | | +-- readonly flag in square brackets
"              | +-- rodified flag in square brackets
"              +-- full path to file in the buffer

set guifont=YaHei\ Consolas\ Hybrid:h11

set guioptions=ce 
"              ||
"              |+-- use simple dialogs rather than pop-ups
"              +  use GUI tabs, not console style tabs
"
set sessionoptions+=resize

set columns=140
set lines=40

set guioptions+=m
set guioptions-=T

filetype on
filetype indent on
filetype plugin on

" AutoCmd
if has('autocmd')
    "autocmd GUIEnter * simalt ~x

    autocmd FileType *.py set foldmethod=indent foldlevel=99
    autocmd FileType *.py setlocal et sta sw=4 sts=4

endif

" pyDiction {
	let g:pydiction_location='$VIM\vimfiles\ftplugin\pydiction\complete-dic'
	let g:pydiction_menu_height = 20
" }

" tagbar {
    let g:tagbar_width=30
"}

"NERDTree {
    let g:NERDTreeWinSize=30
"}

"KeyMap {
    nnoremap <Leader>ee :e $VIM/_vimrc<CR>
    nnoremap <Leader>ss :source $VIM/_vimrc<CR>

    nnoremap <space> @=((foldclosed(line('.')) <0) ? 'zc' : 'zo')<CR>

    nnoremap <C-S-l> <c-w>l
    nnoremap <C-S-h> <c-w>h
    nnoremap <C-S-k> <c-w>k
    nnoremap <C-S-j> <c-w>j

    nnoremap <Leader><F8> <ESC>:TagbarToggle<CR>
    nnoremap <Leader><F7> <ESC>:NERDTreeToggle<CR>

    nnoremap <C-w>e <ESC>:NERDTreeToggle D:\Project\<CR>:TagbarToggle<CR>

    " set Toolbar, Menu visiable 
	map <Leader>ff :if &guioptions =~# 'T' <Bar>
		\set guioptions-=T <Bar>
		\set guioptions-=m <bar>
		\else <Bar>
		\set guioptions+=T <Bar>
		\set guioptions+=m <Bar>
		\endif<CR><CR>
"}

